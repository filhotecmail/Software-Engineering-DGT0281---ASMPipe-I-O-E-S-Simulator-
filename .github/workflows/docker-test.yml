name: Docker Tests

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - 'Dockerfile'
      - 'scripts/docker-*.sh'
      - '.dockerignore'
      - 'src/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'scripts/docker-*.sh'
      - '.dockerignore'
      - 'src/**'

jobs:
  docker-build-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        chmod +x scripts/docker-build.sh
        ./scripts/docker-build.sh
    
    - name: Test Docker image structure
      run: |
        docker run --rm simulador-dma:latest ls -la /app
        docker run --rm simulador-dma:latest ls -la /app/src
        docker run --rm simulador-dma:latest ls -la /app/src/python
        docker run --rm simulador-dma:latest ls -la /app/src/assembly
    
    - name: Test Python modules in Docker
      run: |
        docker run --rm simulador-dma:latest python -c "import sys; print('Python version:', sys.version)"
        docker run --rm simulador-dma:latest python -c "import tkinter; print('Tkinter available')"
        docker run --rm simulador-dma:latest python -c "import os; print('Working dir:', os.getcwd()); print('Files:', os.listdir('.'))"
    
    - name: Test NASM in Docker
      run: |
        docker run --rm simulador-dma:latest nasm -v
        docker run --rm simulador-dma:latest sh -c "mkdir -p build && nasm -f elf32 src/assembly/dma_controller.asm -o build/dma_controller.o && echo 'Assembly compilation successful'"
    
    - name: Test Docker container startup
      run: |
        timeout 10s docker run --rm simulador-dma:latest || echo "Container started and stopped as expected"
    
    - name: Check Docker image size
      run: |
        docker images simulador-dma:latest
        echo "Docker image built successfully with reasonable size"